#BlueJ class context
comment0.target=AnimatedCharacter
comment0.text=\r\n\ The\ Animated\ Character\ superclass\ is\ designed\ to\ help\ manage\ animations\ for\ 2d\ sprites\r\n\ in\ Greenfoot.\ It\ implements\ TIME-BASED\ (rather\ than\ Greenfoot\ act-based)\ \r\n\ frame\ changing\ and\ moving\ to\ create\ both\ smoothness\ and\ preciseness.\ \r\n\ \ <li>Now\ uses\ a\ Hashmap\ to\ organize\ named\ animations</li>\r\n\ \ <li>\ Now\ divides\ animations\ into\ two\ types\:<ol>\r\n\ \ <li>Primary\ Animation\:\ Usually\ movement\ -\ this\ is\ the\ base\ animation.</li>\r\n\ \ <li>Terminal\ Animations\ -\ animations\ that\ run,\ then\ end,\ and\ return\ to\ the\ primary\ animation,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ or\ remove\ itself\ from\ the\ World\ as\ specified</li>\r\n\ </ul>\r\n\ \r\n\ <p><b>v0.8.0\:</b>\ (April\ 2020)</p>\r\n\ <ul>\r\n\ \ <li>\ Import\ code\ is\ completely\ revamped,\ now\ imports\ spritesheets\ direction,\ not\ \r\n\ \ individual\ images.</li>\r\n\ \ <li>\ Adding\ an\ optional\ layering\ system.</li>\r\n\ \ <li>\ Adding\ the\ result\ of\ many\ lessons\ learned\ from\ Greentree\ Chronicles\ code</li>\r\n\ \ <li>\ Trying\ to\ move\ as\ much\ functionality\ as\ possible\ out\ of\ the\ subclasses\ and\ into\ here</li>\r\n\ </ul>\ \r\n
comment1.params=
comment1.target=AnimatedCharacter()
comment1.text=\r\n\ Default\ constructor\ -\ must\ be\ called\ via\ super()\ in\ your\ object's\ Constructor.\r\n
comment10.params=anim
comment10.target=void\ refresh(Animation)
comment10.text=\r\n\ Standard\ refresh\ -\ uses\ the\ spritesheet\ built\ into\ this\ AnimatedCharacter.\ This\ should\r\n\ be\ called\ after\ making\ changes\ to\ the\ SpriteSheet,\ so\ that\ they\ will\ change\ in\ the\ \r\n\ active\ Animation.\ Remember\ to\ apply\ trim()\ after,\ if\ required,\ \ as\ this\ does\ not\ trim\ the\ images.\r\n\ \r\n\ @param\ \ \ anim\ \ \ \ The\ Animation\ object\ that\ you\ wish\ to\ refresh.\ This\ will\ use\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ default\ /\ built-in\ spriteSheet,\ which\ you\ may\ have\ just\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ changed\ using\ setLayer,\ or\ otherwise.\r\n
comment11.params=anim
comment11.target=void\ setPrimaryAnimation(java.lang.String)
comment12.params=anim
comment12.target=void\ setPrimaryAnimation(Animation)
comment13.params=moveSpeed\ framesPerSecond
comment13.target=void\ changeSpeed(int,\ int)
comment13.text=\r\n\ Set\ the\ movement\ speed\ (in\ pixels\ per\ second)\ and\ the\ animation\ rate\r\n\ (in\ frames\ per\ second)\r\n
comment14.params=dirX\ dirY
comment14.target=void\ moveInDirection(int,\ int)
comment14.text=\r\n\ <p>Make\ this\ AnimatedCharacter\ move\ in\ a\ specified\ direction.</p>\r\n\ \r\n\ <p><b>Instructions\:</b></p>\r\n\ <ol>\r\n\ <li>Subclasses\ can\ just\ set\ direction\ once\ and\ the\ animated\ character\r\n\ will\ keep\ moving\ until\ stopped\ or\ direction\ changes.</li>\r\n\ <li>Subclasses\ can\ call\ this\ repeatedly\ -\ if\ direction\ doesn't\ change,\r\n\ these\ method\ calls\ will\ be\ ignored</li>\r\n\ <li>\ This\ method\ does\ not\ actually\ perform\ movement\ -\ only\ set\ direction\r\n\ variables.\ This\ is\ intended\ -\ the\ super.act()\ call\ in\ the\ subclass\ will\ run\r\n\ last\ in\ the\ subclass'\ act()\ method\ and\ perform\ the\ actual\ movement.</li>\r\n\r\n\ <li>Intended\ to\ receive\ a\ 1\ or\ -1\ for\ for\ ONE\ of\ the\ parameters,\ and\ a\ \r\n\ zero\ (0)\ for\ the\ other.\ This\ method\ does\ not\ allow\ diagonal\ movement.</li>\r\n\ </ol>\r\n\ @param\ dirX\ \ The\ direction\ for\ x\ movement.\ Should\ be\ -1,\ 0\ or\ 1.\r\n\ @param\ dirY\ \ The\ direction\ for\ y\ movement.\ Should\ be\ -1,\ 0\ or\ 1.\ \r\n
comment15.params=direction
comment15.target=void\ moveInDirection(AnimatedCharacter.Direction)
comment15.text=\r\n\ \r\n
comment16.params=direction
comment16.target=void\ stopMoving(AnimatedCharacter.Direction)
comment17.params=
comment17.target=void\ stopMoving()
comment18.params=x\ y
comment18.target=void\ setLocation(int,\ int)
comment18.text=\r\n\ Override\ the\ default\ setLocation\ method\ because\ the\ backing\r\n\ variables\ xx\ and\ yy\ need\ to\ be\ updated,\ otherwise\ they\ will\r\n\ immediately\ move\ the\ player\ back\ every\ time\ it\ tries\ to\ move.\r\n
comment19.params=animationName\ removeAfterAnimation\ stopMoving\ d
comment19.target=void\ runTerminalAnimation(java.lang.String,\ boolean,\ boolean,\ AnimatedCharacter.Direction)
comment19.text=\r\n\ Runs\ an\ animation\ that\ will\ come\ to\ an\ end\ when\ it's\ finished\ doing\ it's\ thing.\r\n\ \r\n\ @param\ animationName\ The\ name\ of\ the\ Animation\ (it\ must\ have\ been\ added\ to\ animations\ already)\r\n\ @param\ removeAfterAnimation\ \ Should\ this\ AnimatedCharacter\ delete\ itself\ when\ this\ Animation\ is\ complete?\r\n\ @param\ stopMoving\ \ \ \ Should\ this\ AnimatedCharacter\ stop\ moving\ BEFORE\ performing\ this\ operation?\r\n\ @param\ d\ \ \ \ \ What\ direction\ is\ this\ Animation\ currently\ facing?\r\n
comment2.params=w
comment2.target=void\ addedToWorld(greenfoot.World)
comment20.params=images
comment20.target=void\ setCurrentImages(greenfoot.GreenfootImage[])
comment21.params=
comment21.target=void\ act()
comment22.params=
comment22.target=boolean\ isTerminal()
comment3.params=width\ height\ xOffset\ yOffset
comment3.target=void\ setCollider(int,\ int,\ int,\ int)
comment4.params=
comment4.target=void\ positionCollider()
comment5.params=
comment5.target=void\ disableCollision()
comment6.params=
comment6.target=greenfoot.GreenfootImage\ getSpriteSheet()
comment7.params=
comment7.target=greenfoot.GreenfootImage\ getStartingImage()
comment8.params=layer\ image
comment8.target=void\ setLayer(int,\ greenfoot.GreenfootImage)
comment8.text=\r\n\ Set\ layers\ for\ your\ image.\r\n\ \r\n\ The\ 0th\ layer\ is\ on\ the\ bottom\ and\ will\ be\ drawn\ first.\ The\ highest\ \r\n\ layer\ is\ on\ top\ and\ will\ be\ drawn\ last.\ By\ default\ there\ are\ 12\ layers,\r\n\ but\ you\ can\ add\ more\ by\ changing\ the\ MAX_LAYERS\ constant.\r\n\ \r\n\ The\ supplied\ graphics\ should\ all\ be\ Spritesheets,\ and\ you\ should\ consider\r\n\ which\ layers\ should\ be\ drawn\ on\ top\ of\ which\ for\ the\ best\ visual\ effect.\r\n\ \r\n\ @param\ layer\ The\ layer\ number\ you\ want\ to\ place\ this\ spritesheet\ at\r\n\ @param\ image\ The\ sprite\ sheet\ that\ you\ want\ to\ place\ at\ this\ layer\r\n
comment9.params=anim\ spriteSheet
comment9.target=void\ refresh(Animation,\ greenfoot.GreenfootImage)
comment9.text=\r\n\ Custom\ refresh\ -\ specify\ your\ own\ spriteSheet,\ and\ refresh\ this\ animation\ to\ reflect\ it.\r\n\ Remember\ to\ apply\ trim()\ after,\ if\ required,\ \ as\ this\ does\ not\ trim\ the\ images.\r\n\ \r\n\ @param\ \ \ anim\ \ \ \ The\ Animation\ object\ that\ you\ wish\ to\ refresh.\r\n\ @param\ \ \ GreenfootImage\ \ The\ image\ object\ to\ use\ to\ update\ this\ Animation\r\n
numComments=23
